{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAM,SAACC,GAEhB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCNEC,EAAW,SAAAR,GAGzB,OAFAS,QAAQC,IAAIV,GAGR,qBAAKC,UAAU,YAAf,SACKD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPlBQ,G,YAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACxC,OACI,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCsCjEG,E,kDArCb,aAAe,IAAD,8BACd,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALD,E,qDAUhB,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,0BAG3C,SAAaE,GACbC,KAAKF,SAAS,CAACN,YAAaO,EAAEE,OAAOC,U,oBAGrC,WAAW,IAAD,EAC0BF,KAAKT,MAA/BR,EADA,EACAA,SAAUS,EADV,EACUA,YACZW,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYa,kBAClD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAa,YAAY,iBACZC,aAAca,KAAKb,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.31852252.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.styles.css\"\r\n\r\n\r\nexport const Card =(props)=> {\r\n\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2> {props.monster.name} </h2>\r\n            <p> {props.monster.email} </p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"./card-list.styles.css\"\r\nimport { Card } from '../card/card.component'\r\n\r\n export const CardList = props => {\r\nconsole.log(props)\r\n\r\nreturn (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n)\r\n}\r\n\r\n\r\n","import \"./search-box.styles.css\"\r\nimport React from 'react';\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=> {\r\nreturn (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n)\r\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components.jsx';\nimport './App.css';\nimport { SearchBox} from \"./components/search-box/search-box.component.jsx\";\n\nclass App extends Component {\n  constructor() {\n  super();\n\n  this.state = {\n    monsters: [],\n    searchField: \"\"\n  };\n  \n}\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({ monsters: users}));\n}\n\nhandleChange(e) {\nthis.setState({searchField: e.target.value})\n}\n\nrender () {\n  const { monsters, searchField } = this.state;\n  const filteredMonsters = monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchField.toLowerCase()))\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n      placeholder=\"search monster\"\n      handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}